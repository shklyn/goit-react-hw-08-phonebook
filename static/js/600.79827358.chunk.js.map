{"version":3,"file":"static/js/600.79827358.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectContactsArr = state => state.contacts.contactsArr;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactsArr, selectFilter],\n  (contactsArr, filter) => {\n    return contactsArr.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background: #1182ff;\n  gap: 12px;\n\n  margin-bottom: 36px;\n  padding: 15px;\n\n  font-size: 20px;\n  width: 360px;\n  height: 156px;\n  border-radius: 12px;\n  box-shadow: 0px 8px 16px rgb(255 72 0 / 69%), 0px 4px 8px rgb(0 52 255 / 82%),\n    0px 4px 8px rgb(0 204 255 / 0%), 0px 8px 16px rgb(0 223 255);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 12px;\n  &:not-last-of-type {\n    gap: 22px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 26px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 12px;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 360px;\n  height: 36px;\n  color: #fff;\n  background: #00ff8e;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: #fff;\n    background-color: #225b18;\n    box-shadow: inset 0px 2px 4px rgb(244 0 255 / 30%),\n      inset 0px 4px 8px rgb(127 0 255 / 30%),\n      inset 0px 8px 16px rgb(255 0 240 / 30%);\n    transition: 0.2s;\n    transform: translateY(2px);\n  }\n`;","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsArr } from 'redux/selectors';\nimport { postContact } from 'redux/operations';\nimport { Form, Label, Input, SubmitButton } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContactsArr);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handleInputChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const form = e.target;\n\n    for (const contact of stateContacts) {\n      if (\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      ) {\n        Notiflix.Notify.failure(`${[name]} is already in contact`);\n        return;\n      } else if (contact.number === form.elements.number.value) {\n        return Notiflix.Notify.failure(\n          `${form.elements.number.value} is already in contact`\n        );\n      }\n    }\n\n    dispatch(\n      postContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n\n    Notiflix.Notify.success('Contact added');\n    form.reset();\n\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          onChange={handleInputChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          onChange={handleInputChange}\n          value={number}\n        />\n      </Label>\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n}","import styled from '@emotion/styled';\n\nexport const ContactItemLi = styled.li`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 100px;\n  color: #fff;\n  background: #00ff8e;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  margin-left: auto;\n\n  &:hover {\n    color: #fff;\n    background-color: #225b18;\n    box-shadow: inset 0px 2px 4px rgba(255, 0, 33, 0.5),\n      inset 0px 4px 8px rgba(255, 0, 33, 0.5),\n      inset 0px 8px 16px rgba(255, 0, 33, 0.5);\n    transition: 0.2s;\n    transform: translateY(2px);\n  }\n`;","import { ContactItemLi, DeleteBtn } from './ContactItem.styled';\nimport { deleteContact } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport Notiflix from 'notiflix';\n\nexport const ContactItem = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleDelete = (id, name) => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success(`Contact ${name} deleted successfully`);\n  };\n\n  return visibleContacts.map(({ id, name, number }) => {\n    return (\n      <ContactItemLi key={id}>\n        {name}: {number}\n        <DeleteBtn type=\"button\" onClick={() => handleDelete(id, name)}>\n          Delete\n        </DeleteBtn>\n      </ContactItemLi>\n    );\n  });\n};","import styled from '@emotion/styled';\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: 12px;\n\n  padding: 15px 25px;\n  background: #1182ff;\n  font-size: 20px;\n  min-width: 480px;\n  height: auto;\n  border-radius: 12px;\n  box-shadow: 0px 8px 16px rgb(255 72 0 / 69%), 0px 4px 8px rgb(0 52 255 / 82%),\n    0px 4px 8px rgb(0 204 255 / 0%), 0px 8px 16px rgb(0 223 255);\n`;","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ContactList } from './ContactList.styled';\nexport const ContactsList = () => {\n  return (\n    <ContactList>\n      <ContactItem />\n    </ContactList>\n  );\n};","import styled from '@emotion/styled';\n\nexport const InputFilter = styled.input`\n  width: 240px;\n  height: 26px;\n  color: #ffffff;\n  background: #1182ff;\n  border: none;\n  border-radius: 5px;\n  padding-left: 12px;\n`;\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 22px;\n  margin-bottom: 12px;\n`;","import { InputFilter, LabelFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilter = e => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  return (\n    <LabelFilter>\n      Find contacts by name\n      <InputFilter\n        type=\"text\"\n        placeholder=\"Enter name of contact\"\n        value={filter}\n        onChange={onFilter}\n      ></InputFilter>\n    </LabelFilter>\n  );\n};","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsArr, selectIsLoading, selectError } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contactsArr = useSelector(selectContactsArr);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h1>PhoneBook</h1>\n      <ContactForm />\n\n      <div>\n        {isLoading && !error && <b>Loading...</b>}\n        {error && <p>Oops, something went wrong</p>}\n        {contactsArr.length > 0 && (\n          <div>\n            <h2>Contacts</h2>\n            <Filter />\n          </div>\n        )}\n        {contactsArr.length > 0 && <ContactsList />}\n      </div>\n    </div>\n  );\n}"],"names":["selectContactsArr","state","contacts","contactsArr","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","name","toLowerCase","includes","Form","styled","Label","Input","SubmitButton","ContactForm","dispatch","useDispatch","stateContacts","useSelector","useState","setName","number","setNumber","handleInputChange","e","target","value","onSubmit","preventDefault","form","contact","elements","Notiflix","postContact","reset","type","pattern","title","required","placeholder","onChange","ContactItemLi","DeleteBtn","ContactItem","visibleContacts","map","id","onClick","deleteContact","handleDelete","ContactList","ContactsList","InputFilter","LabelFilter","Filter","setStatusFilter","Contacts","useEffect","fetchContacts","className","length"],"sourceRoot":""}